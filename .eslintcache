[{"/Users/aple/Desktop/project/pokemon/src/index.js":"1","/Users/aple/Desktop/project/pokemon/src/App.js":"2","/Users/aple/Desktop/project/pokemon/src/Pokedex.js":"3","/Users/aple/Desktop/project/pokemon/src/Pokemon.js":"4","/Users/aple/Desktop/project/pokemon/src/mockData.js":"5","/Users/aple/Desktop/project/pokemon/src/functions.js":"6"},{"size":611,"mtime":1608592913000,"results":"7","hashOfConfig":"8"},{"size":397,"mtime":1608594710000,"results":"9","hashOfConfig":"8"},{"size":2679,"mtime":1608607103000,"results":"10","hashOfConfig":"8"},{"size":2279,"mtime":1608606028000,"results":"11","hashOfConfig":"8"},{"size":4047,"mtime":1608592311000,"results":"12","hashOfConfig":"8"},{"size":105,"mtime":1608602542000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"k41ox4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/aple/Desktop/project/pokemon/src/index.js",[],["29","30"],"/Users/aple/Desktop/project/pokemon/src/App.js",[],"/Users/aple/Desktop/project/pokemon/src/Pokedex.js",["31"],"import { AppBar, Toolbar, Grid, Card, CardContent, CardMedia, Typography} from \"@material-ui/core\";\nimport {makeStyles } from '@material-ui/core/styles'\nimport React, {useEffect, useState} from \"react\";\nimport pokemons from './mockData'\nimport axios from 'axios'\nimport firstAlpha from './functions'\n\nconst useStyles = makeStyles({\n    bodyContainer: {\n        paddingTop: '20px',\n        paddingLeft: \"50px\",\n        paddingRight: '50px'\n    },\n    cardMedia: {\n        margin: 'auto'\n    },\n    cardContent: {\n        textAlign: 'center'\n    }\n})\n\n\n\nfunction Pokedex({history}) {\n    const [pokemonData, setPokemons] = useState({})\n    const Classes = useStyles()\n\n    useEffect(()=>{\n        axios.get(`https://pokeapi.co/api/v2/pokemon?limit=807`)\n        .then(function(response){\n            const {data} = response;\n            const {results} = data;\n            const PokemonData ={};\n            results.forEach((pokemon, index)=>{\n                PokemonData[index + 1] = {\n                  id: index + 1,\n                  name: pokemon.name,\n                  sprites: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`,\n                };\n            }\n        )\n        setPokemons(PokemonData)\n    })\n    },[])\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar></Toolbar>\n      </AppBar>\n      {pokemonData ? (\n      <Grid container spacing={2} className={Classes.bodyContainer}>\n        {Object.keys(pokemonData).map(pokemonId =>{\n            const {id, name} = pokemonData[`${pokemonId}`] \n            const sprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`\n            return (\n                <Grid item xs={6} sm={4} md={3} key={id}>\n                    <Card onClick={()=>history.push(`/${pokemonId}`)}>\n                    <CardMedia\n                        style={{width:'130px', height: '130px'}}\n                        image={sprite}\n                        alt={name}\n                        className={Classes.cardMedia}\n                    />\n                        <CardContent>\n                            <Typography className={Classes.cardContent}>{`${id}. ${firstAlpha(name)}`}</Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            )\n        })}\n      </Grid>\n      ) : <h1>Request source not found</h1>}\n\n    </>\n  );\n}\n\nexport default Pokedex;\n\n\n// const GetPokemonCard = (pokemonId)=>{\n//     return(\n//         <Grid item xs={6} sm={4} md={3}>\n//             <Card>\n//                 <CardContent>hello</CardContent>\n//             </Card>\n//         </Grid>\n//     )\n// }","/Users/aple/Desktop/project/pokemon/src/Pokemon.js",["32","33"],"import { Card,CardContent,CardMedia, Grid, Typography,Paper, makeStyles } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport pokemons from \"./mockData\";\nimport firstAlpha from \"./functions\";\n\nconst useStyle = makeStyles({\n  cardStyle: {\n    margin: \"auto\",\n  },\n  GridStyle: {\n      justifyItems: 'center',\n      alignItems: \"center\"\n  }\n});\n\nfunction Pokemon(props) {\n  const { match } = props;\n  const { params } = match;\n  const { pokemonId } = params;\n\n  const [pokemon, setPokemon] = useState(pokemons[`${pokemonId}`]);\n  console.log(pokemon);\n  const { name, id, species, height, weight, types, sprites } = pokemon;\n  const url = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n  const { front_default } = sprites;\n\n    const Classes = useStyle();\n\n\n  return (\n    <>\n      {pokemon ? (\n        <>\n          <Grid container xs={12} className={Classes.GridStyle}>\n            <Grid item>\n              <Typography variant=\"h1\">\n                {`${id}. ${firstAlpha(name)}`} <img src={front_default} />\n              </Typography>\n              <Card component={Paper} className={Classes.cardStyle}>\n                <CardMedia\n                  image={url}\n                  style={{ width: \"300px\", height: \"300px\" }}\n                />\n                <CardContent>\n                  <Typography variant=\"h3\"> Pokemon info</Typography>\n                  <Typography variant=\"h6\">\n                    species: <a href={species.url}>{species.name}</a>{\" \"}\n                  </Typography>\n                  <Typography variant=\"h6\"> weight: {weight}</Typography>\n                  <Typography variant=\"h6\"> height: {height}</Typography>\n                  <Typography variant=\"h6\"> Types: </Typography>\n                  {types.map((typeInfo) => {\n                    const { type } = typeInfo;\n                    const { name } = type;\n                    return (\n                      <Typography variant=\"h6\" key={name}>\n                        {name}\n                      </Typography>\n                    );\n                  })}\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </>\n      ) : (\n        <h1>Request page not found</h1>\n      )}\n    </>\n  );\n}\nexport default Pokemon;\n","/Users/aple/Desktop/project/pokemon/src/mockData.js",["34"],"/Users/aple/Desktop/project/pokemon/src/functions.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":16},{"ruleId":"39","severity":1,"message":"43","line":21,"column":19,"nodeType":"41","messageId":"42","endLine":21,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":37,"column":48,"nodeType":"46","endLine":37,"endColumn":75},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","endLine":148,"endColumn":3},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'pokemons' is defined but never used.","Identifier","unusedVar","'setPokemon' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]